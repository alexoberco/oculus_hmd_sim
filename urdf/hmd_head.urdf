<?xml version="1.0"?>
<robot name="hmd_head">

  <!-- base -->
  <link name="base_link">
    <inertial>
      <mass value="0.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
    <visual><geometry><cylinder radius="0.05" length="0.02"/></geometry></visual>
    <collision><geometry><cylinder radius="0.05" length="0.02"/></geometry></collision>
  </link>

  <!-- yaw -->
  <link name="neck_yaw_link">
    <inertial>
      <mass value="0.2"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0002" ixy="0" ixz="0" iyy="0.0002" iyz="0" izz="0.0002"/>
    </inertial>
    <visual><geometry><cylinder radius="0.03" length="0.06"/></geometry></visual>
    <collision><geometry><cylinder radius="0.03" length="0.06"/></geometry></collision>
  </link>
  <joint name="neck_yaw" type="revolute">
    <parent link="base_link"/><child link="neck_yaw_link"/>
    <origin xyz="0 0 0.06" rpy="0 0 0"/><axis xyz="0 0 1"/>
    <limit lower="-3.1415" upper="3.1415" effort="5" velocity="6.0"/>
    <dynamics damping="0.05"/>
  </joint>

  <!-- pitch -->
  <link name="neck_pitch_link">
    <inertial>
      <mass value="0.2"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0002" ixy="0" ixz="0" iyy="0.0002" iyz="0" izz="0.0002"/>
    </inertial>
    <visual><geometry><cylinder radius="0.03" length="0.06"/></geometry></visual>
    <collision><geometry><cylinder radius="0.03" length="0.06"/></geometry></collision>
  </link>
  <joint name="neck_pitch" type="revolute">
    <parent link="neck_yaw_link"/><child link="neck_pitch_link"/>
    <origin xyz="0 0 0.06" rpy="0 0 0"/><axis xyz="0 1 0"/>
    <limit lower="-1.57" upper="1.57" effort="5" velocity="6.0"/>
    <dynamics damping="0.05"/>
  </joint>

  <!-- roll -->
  <link name="head_link">
    <inertial>
      <mass value="0.4"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0004" ixy="0" ixz="0" iyy="0.0004" iyz="0" izz="0.0004"/>
    </inertial>
    <visual><geometry><sphere radius="0.08"/></geometry></visual>
    <collision><geometry><sphere radius="0.08"/></geometry></collision>
  </link>
  <joint name="head_roll" type="revolute">
    <parent link="neck_pitch_link"/><child link="head_link"/>
    <origin xyz="0 0 0.06" rpy="0 0 0"/><axis xyz="1 0 0"/>
    <limit lower="-1.57" upper="1.57" effort="5" velocity="6.0"/>
    <dynamics damping="0.05"/>
  </joint>

  <!-- 1) Link físico de la cámara: un cubito pegado a la esfera -->
  <link name="camera_link">
    <inertial>
      <mass value="0.02"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    <visual>
      <geometry><box size="0.02 0.04 0.04"/></geometry>
      <material name="cam_gray"><color rgba="0.6 0.6 0.6 1"/></material>
    </visual>
    <collision>
      <geometry><box size="0.02 0.04 0.04"/></geometry>
    </collision>
  </link>

  <!-- 2) Junta fija: pegamos la cámara delante de la cabeza (+X) -->
  <joint name="head_to_camera" type="fixed">
    <parent link="head_link"/>
    <child link="camera_link"/>
    <!-- adelante 12 cm; orientamos el link de forma "normal", sin rpy -->
    <origin xyz="0.09 0 0" rpy="0 0 0"/>
  </joint>

  <!-- 3) Frame óptico (Z adelante, X derecha, Y abajo) para RViz -->
  <link name="camera_optical_frame"/>
  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_optical_frame"/>
    <!-- Convención óptica estándar: rpy = [-90°, 0, -90°] -->
    <origin xyz="0 0 0" rpy="-1.57079632679 0 -1.57079632679"/>
  </joint>

  <!-- 4) Inyección del sensor de cámara (SDF dentro del URDF) -->
  <gazebo reference="camera_link">
    <sensor name="head_camera" type="camera">
      <always_on>true</always_on>
      <update_rate>60</update_rate>
      <!-- Ponemos un tópico GZ corto y limpio para facilitar el bridge -->
      <topic>/hmd_cam/image</topic>
      <frame_id>camera_optical_frame</frame_id>
      <camera>
        <horizontal_fov>1.0472</horizontal_fov> <!-- ~60° -->
        <image>
          <width>1024</width><height>576</height>
          <format>R8G8B8</format>
        </image>
        <clip><near>0.1</near><far>100.0</far></clip>
      </camera>
      <visualize>true</visualize>
    </sensor>
  </gazebo>

  <!-- === Sistemas de control de Gazebo Sim === -->
  <gazebo>
    <plugin filename="gz-sim-joint-position-controller-system"
            name="gz::sim::systems::JointPositionController">
      <joint_name>neck_yaw</joint_name>
      <topic>/gz/hmd/neck_yaw/cmd</topic>
      <p_gain>12</p_gain><i_gain>0.1</i_gain><d_gain>0.2</d_gain>
    </plugin>
    <plugin filename="gz-sim-joint-position-controller-system"
            name="gz::sim::systems::JointPositionController">
      <joint_name>neck_pitch</joint_name>
      <topic>/gz/hmd/neck_pitch/cmd</topic>
      <p_gain>12</p_gain><i_gain>0.1</i_gain><d_gain>0.2</d_gain>
    </plugin>
    <plugin filename="gz-sim-joint-position-controller-system"
            name="gz::sim::systems::JointPositionController">
      <joint_name>head_roll</joint_name>
      <topic>/gz/hmd/head_roll/cmd</topic>
      <p_gain>8</p_gain><i_gain>0.05</i_gain><d_gain>0.1</d_gain>
    </plugin>

    <!-- Publica estados de juntas (GZ Transport -> lo puenteamos a /joint_states) -->
    <plugin filename="gz-sim-joint-state-publisher-system"
            name="gz::sim::systems::JointStatePublisher">
      <joint_name>neck_yaw</joint_name>
      <joint_name>neck_pitch</joint_name>
      <joint_name>head_roll</joint_name>
    </plugin>
  </gazebo>
</robot>
